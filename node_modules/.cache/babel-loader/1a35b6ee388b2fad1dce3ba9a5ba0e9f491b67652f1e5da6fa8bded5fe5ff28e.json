{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/Desktop/reactApp/end-term/src/components/Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Form from \"react-bootstrap/Form\";\n// import \"./login.css\";\n// import Button from \"react-bootstrap/Button\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap/dist/js/bootstrap.min.js\";\n\n// export default function Login() {\n//   const [email, setEmail] = useState(\"\");\n\n//   const [password, setPassword] = useState(\"\");\n\n//   function validateForm() {\n//     return email.length > 0 && password.length > 0;\n//   }\n\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     alert(email);\n//     alert(password);\n//   }\n\n//   return (\n//     <div className=\"container bg-warning\">\n//       <Form onSubmit={handleSubmit} class=\"formS bg-warning\">\n//         <Form.Group size=\"lg\" controlId=\"email\">\n//           <Form.Label>Email</Form.Label>\n\n//           <Form.Control\n//             autoFocus\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         <Form.Group size=\"lg\" controlId=\"password\">\n//           <Form.Label>Password</Form.Label>\n\n//           <Form.Control\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n//           Login\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport \"./LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [isLogin, setIsLogin] = useState(true); // Initially, it's a login form\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isLogin) {\n      alert(`Login: Username - ${formData.username}, Password - ${formData.password}`);\n    } else {\n      alert(`Signup: Username - ${formData.username}, Password - ${formData.password}`);\n    }\n    // Reset the input fields after submission\n    setFormData({\n      username: \"\",\n      password: \"\"\n    });\n  };\n  const toggleForm = () => {\n    setIsLogin(!isLogin); // Toggle between login and signup forms\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-container ${isLogin ? \"login\" : \"signup\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: isLogin ? \"Login\" : \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: isLogin ? \"Login\" : \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-btns\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleForm,\n          children: isLogin ? \"Switch to Signup\" : \"Switch to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MRv8ogfhv8qE3HJch1ekmWg/sQo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","formData","setFormData","username","password","isLogin","setIsLogin","handleInputChange","e","name","value","target","handleSubmit","preventDefault","alert","toggleForm","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/aryan/Desktop/reactApp/end-term/src/components/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Form from \"react-bootstrap/Form\";\n// import \"./login.css\";\n// import Button from \"react-bootstrap/Button\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap/dist/js/bootstrap.min.js\";\n\n// export default function Login() {\n//   const [email, setEmail] = useState(\"\");\n\n//   const [password, setPassword] = useState(\"\");\n\n//   function validateForm() {\n//     return email.length > 0 && password.length > 0;\n//   }\n\n//   function handleSubmit(event) {\n//     event.preventDefault();\n//     alert(email);\n//     alert(password);\n//   }\n\n//   return (\n//     <div className=\"container bg-warning\">\n//       <Form onSubmit={handleSubmit} class=\"formS bg-warning\">\n//         <Form.Group size=\"lg\" controlId=\"email\">\n//           <Form.Label>Email</Form.Label>\n\n//           <Form.Control\n//             autoFocus\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         <Form.Group size=\"lg\" controlId=\"password\">\n//           <Form.Label>Password</Form.Label>\n\n//           <Form.Control\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n//           Login\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport \"./LoginForm.css\";\n\nfunction App() {\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n  const [isLogin, setIsLogin] = useState(true); // Initially, it's a login form\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLogin) {\n      alert(\n        `Login: Username - ${formData.username}, Password - ${formData.password}`\n      );\n    } else {\n      alert(\n        `Signup: Username - ${formData.username}, Password - ${formData.password}`\n      );\n    }\n    // Reset the input fields after submission\n    setFormData({ username: \"\", password: \"\" });\n  };\n\n  const toggleForm = () => {\n    setIsLogin(!isLogin); // Toggle between login and signup forms\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"slider\">\n        <div className={`form-container ${isLogin ? \"login\" : \"signup\"}`}>\n          <form onSubmit={handleSubmit}>\n            <h2>{isLogin ? \"Login\" : \"Signup\"}</h2>\n            <div>\n              <label htmlFor=\"username\">Username:</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\">Password:</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n              />\n            </div>\n            <button type=\"submit\">{isLogin ? \"Login\" : \"Signup\"}</button>\n          </form>\n        </div>\n        <div className=\"slider-btns\">\n          <button onClick={toggleForm}>\n            {isLogin ? \"Switch to Signup\" : \"Switch to Login\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IAAEO,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACQ,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAIR,OAAO,EAAE;MACXS,KAAK,CACF,qBAAoBb,QAAQ,CAACE,QAAS,gBAAeF,QAAQ,CAACG,QAAS,EAC1E,CAAC;IACH,CAAC,MAAM;MACLU,KAAK,CACF,sBAAqBb,QAAQ,CAACE,QAAS,gBAAeF,QAAQ,CAACG,QAAS,EAC3E,CAAC;IACH;IACA;IACAF,WAAW,CAAC;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBT,UAAU,CAAC,CAACD,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED,oBACEP,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBnB,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBnB,OAAA;QAAKkB,SAAS,EAAG,kBAAiBX,OAAO,GAAG,OAAO,GAAG,QAAS,EAAE;QAAAY,QAAA,eAC/DnB,OAAA;UAAMoB,QAAQ,EAAEN,YAAa;UAAAK,QAAA,gBAC3BnB,OAAA;YAAAmB,QAAA,EAAKZ,OAAO,GAAG,OAAO,GAAG;UAAQ;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvCxB,OAAA;YAAAmB,QAAA,gBACEnB,OAAA;cAAOyB,OAAO,EAAC,UAAU;cAAAN,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3CxB,OAAA;cACE0B,IAAI,EAAC,MAAM;cACXC,EAAE,EAAC,UAAU;cACbhB,IAAI,EAAC,UAAU;cACfC,KAAK,EAAET,QAAQ,CAACE,QAAS;cACzBuB,QAAQ,EAAEnB;YAAkB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNxB,OAAA;YAAAmB,QAAA,gBACEnB,OAAA;cAAOyB,OAAO,EAAC,UAAU;cAAAN,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3CxB,OAAA;cACE0B,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,UAAU;cACbhB,IAAI,EAAC,UAAU;cACfC,KAAK,EAAET,QAAQ,CAACG,QAAS;cACzBsB,QAAQ,EAAEnB;YAAkB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNxB,OAAA;YAAQ0B,IAAI,EAAC,QAAQ;YAAAP,QAAA,EAAEZ,OAAO,GAAG,OAAO,GAAG;UAAQ;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNxB,OAAA;QAAKkB,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BnB,OAAA;UAAQ6B,OAAO,EAAEZ,UAAW;UAAAE,QAAA,EACzBZ,OAAO,GAAG,kBAAkB,GAAG;QAAiB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAjEQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAmEZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}